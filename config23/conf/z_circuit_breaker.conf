http {

    upstream default-hello1-8000 {
        least_conn;
        server 192.168.99.100:8001 max_fails=2 fail_timeout=60;
        server 192.168.99.100:8001 max_fails=2 fail_timeout=60;
        server 192.168.99.100:8001 max_fails=2 fail_timeout=60;
    }

    upstream default-hello2-8000 {
        least_conn;
        server 192.168.99.100:8002 max_fails=2 fail_timeout=60;
        server 192.168.99.100:8002 max_fails=2 fail_timeout=60;
        server 192.168.99.100:8002 max_fails=2 fail_timeout=60;
    }

    upstream upstream-default-backend {
        least_conn;
        server 192.168.99.100:8001 max_fails=0 fail_timeout=0;

    }

    server {
        server_name _;
        listen 80;
        location / {
            proxy_set_header Host                   $host;
            proxy_set_header X-Real-IP              $remote_addr;
            proxy_set_header                        Upgrade           $http_upgrade;
            proxy_set_header                        Connection        $connection_upgrade;
            proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host       $host;
            proxy_set_header X-Forwarded-Port       $server_port;
            proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
            proxy_set_header Proxy                  "";
            proxy_connect_timeout                   5s;
            proxy_send_timeout                      60s;
            proxy_read_timeout                      60s;
            proxy_redirect                          off;
            proxy_buffering                         off;
            proxy_http_version                      1.1;
            proxy_pass http://upstream-default-backend;
        }

        # this is required to avoid error if nginx is being monitored
        # with an external software (like sysdig)
        location /nginx_status {
            allow 127.0.0.1;
            deny all;
            access_log off;
            stub_status on;
        }
    }

    server {
        server_name hello1.armesto.dev;
        listen 80;
        location / {
            proxy_set_header Host                   $host;
            proxy_set_header X-Real-IP              $remote_addr;           ## Pass Real IP
            proxy_set_header                        Upgrade           $http_upgrade;
            proxy_set_header                        Connection        $connection_upgrade;
            proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host       $host;
            proxy_set_header X-Forwarded-Port       $server_port;
            proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
            proxy_set_header Proxy                  "";
            proxy_connect_timeout                   5s;
            proxy_send_timeout                      60s;
            proxy_read_timeout                      60s;
            proxy_redirect                          off;
            proxy_buffering                         off;
            proxy_http_version                      1.1;
            proxy_pass http://default-hello1-8000;
        }
    }

    server {
        server_name hello2.armesto.dev;
        listen 80;
        location / {
            proxy_set_header Host                   $host;
            proxy_set_header X-Real-IP              $remote_addr;

            # Allow websocket connections
            proxy_set_header                        Upgrade           $http_upgrade;
            proxy_set_header                        Connection        $connection_upgrade;

            proxy_set_header X-Forwarded-For        $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Host       $host;
            proxy_set_header X-Forwarded-Port       $server_port;
            proxy_set_header X-Forwarded-Proto      $pass_access_scheme;
            proxy_set_header Proxy                  "";
            proxy_connect_timeout                   5s;
            proxy_send_timeout                      60s;
            proxy_read_timeout                      60s;
            proxy_redirect                          off;
            proxy_buffering                         off;
            proxy_http_version                      1.1;
            proxy_pass http://default-hello2-8000;
        }
    }

    # default server, used for NGINX healthcheck and access to nginx stats
    server {
        # Use the port 18080 (random value just to avoid known ports) as default port for nginx.
        # Changing this value requires a change in:
        # https://github.com/kubernetes/contrib/blob/master/ingress/controllers/nginx/nginx/command.go#L104
        listen 18080 default_server reuseport backlog=511;

        location /healthz {
            access_log off;
            return 200;
        }

        location /nginx_status {
            access_log off;
            stub_status on;
        }

        location / {
            proxy_pass             http://upstream-default-backend;
        }
    }

    # default server for services without endpoints
    server {
        listen 8181;
        location / {
            return 503;
        }
    }
}
